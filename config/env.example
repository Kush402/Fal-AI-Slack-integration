# =============================================================================
# Environment Configuration for fal.ai Dashboard
# =============================================================================

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================
NODE_ENV=development
PORT=3004
SLACK_PORT=3001
SERVICE_NAME=dashboard-backend
LOG_LEVEL=info

# =============================================================================
# SLACK CONFIGURATION
# =============================================================================
# Get these from your Slack App settings at https://api.slack.com/apps
SLACK_BOT_TOKEN=xoxb-your-bot-token-here
SLACK_SIGNING_SECRET=your-signing-secret-here
SLACK_APP_TOKEN=xapp-your-app-token-here

# =============================================================================
# FAL.AI CONFIGURATION
# =============================================================================
# Get your API key from https://fal.ai/
FAL_KEY=your-fal-ai-key-here
FAL_AI_TIMEOUT=30000
FAL_AI_MAX_RETRIES=3
FAL_AI_RETRY_DELAY=1000

# =============================================================================
# GOOGLE DRIVE CONFIGURATION
# =============================================================================
# Service account credentials from Google Cloud Console
GOOGLE_SHARED_DRIVE_ID=your-shared-drive-id
GOOGLE_PROJECT_ID=your-project-id
GOOGLE_PRIVATE_KEY_ID=your-private-key-id
GOOGLE_PRIVATE_KEY="-----BEGIN PRIVATE KEY-----\nYour private key here\n-----END PRIVATE KEY-----\n"
GOOGLE_CLIENT_EMAIL=your-service-account@your-project.iam.gserviceaccount.com
GOOGLE_CLIENT_ID=your-client-id
GOOGLE_CLIENT_X509_CERT_URL=https://www.googleapis.com/robot/v1/metadata/x509/your-service-account%40your-project.iam.gserviceaccount.com
GOOGLE_DRIVE_PARENT_FOLDER_ID=your-parent-folder-id
GOOGLE_DRIVE_SERVICE_ACCOUNT_EMAIL=your-service-account@your-project.iam.gserviceaccount.com

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
# Generate a strong JWT secret: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
JWT_SECRET=your-jwt-secret-here-minimum-32-characters
ENCRYPTION_KEY=your-encryption-key-here

# =============================================================================
# REDIS CONFIGURATION (Optional)
# =============================================================================
# Uncomment and configure if using Redis for session storage
# REDIS_HOST=localhost
# REDIS_PORT=6379
# REDIS_PASSWORD=
# REDIS_DB=0

# =============================================================================
# RATE LIMITING
# =============================================================================
RATE_LIMIT_WINDOW=900000
RATE_LIMIT_MAX_REQUESTS=100

# =============================================================================
# API CONFIGURATION
# =============================================================================
API_REQUEST_TIMEOUT=30000
API_MAX_RETRIES=3

# =============================================================================
# FEATURE FLAGS
# =============================================================================
MOCK_DRIVE_UPLOADS=false
DEBUG_MODE=false

# =============================================================================
# BACKEND API URL (for Slack service)
# =============================================================================
# This will be automatically discovered, but you can override it
BACKEND_API_URL=http://localhost:3004

# =============================================================================
# DEPLOYMENT NOTES
# =============================================================================
# 1. Copy this file to .env
# 2. Fill in your actual values
# 3. Never commit .env to version control
# 4. For production, set NODE_ENV=production
# 5. Ensure all required variables are set before starting services 